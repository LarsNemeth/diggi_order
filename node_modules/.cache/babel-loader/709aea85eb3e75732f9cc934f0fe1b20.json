{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/diggitize/diggi_order/src/components/OrderTable/OrderInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { DataContext } from '../DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dropdownOptions = [{\n  label: 'The Color Red',\n  value: 'red'\n}, {\n  label: 'The Color Green',\n  value: 'green'\n}, {\n  label: 'The Color Blue',\n  value: 'blue'\n}];\n\nconst FormInput = () => {\n  _s();\n\n  // const [products, setProducts] = useContext(DataContext);\n  // const [productName, setProductName] = useState([]);\n  const [selected, setSelected] = useState(dropdownOptions[0]);\n\n  const onSubmitHandler = e => {\n    e.preventDefault;\n    setProductName([...products], {\n      name: productName,\n      complete: false\n    });\n    console.log(productName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    className: \"form-container\",\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"cars\",\n      children: \"Products:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"products\",\n      name: \"products\",\n      onCHange: e => setProductName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInput, \"HWIB2Z3y81mjCh9sheZUKNx9n0c=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["/home/user/Desktop/diggitize/diggi_order/src/components/OrderTable/OrderInput.jsx"],"names":["React","useState","useContext","DataContext","dropdownOptions","label","value","FormInput","selected","setSelected","onSubmitHandler","e","preventDefault","setProductName","products","name","productName","complete","console","log","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAGA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADsB,EAKtB;AACED,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALsB,EAStB;AACED,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATsB,CAAxB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,eAAe,CAAC,CAAD,CAAhB,CAAxC;;AAEA,QAAMM,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,cAAc,CAAC,CAAC,GAAGC,QAAJ,CAAD,EAAgB;AAAEC,MAAAA,IAAI,EAAEC,WAAR;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAhB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,GAJD;;AAMA,sBACE;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,QAAQ,EAAEN,eAHZ;AAAA,4BAKE;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAOE,cAAc,CAACF,CAAC,CAACS,MAAF,CAASd,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,YANF,eAgBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA/BD;;GAAMC,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { DataContext } from '../DataProvider';\n\n\nconst dropdownOptions = [\n  {\n    label: 'The Color Red',\n    value: 'red',\n  },\n  {\n    label: 'The Color Green',\n    value: 'green',\n  },\n  {\n    label: 'The Color Blue',\n    value: 'blue',\n  },\n];\n\nconst FormInput = () => {\n  // const [products, setProducts] = useContext(DataContext);\n  // const [productName, setProductName] = useState([]);\n  const [selected, setSelected] = useState(dropdownOptions[0]);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault;\n    setProductName([...products], { name: productName, complete: false });\n    console.log(productName);\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      className=\"form-container\"\n      onSubmit={onSubmitHandler}\n    >\n      <label for=\"cars\">Products:</label>\n      <select\n        id=\"products\"\n        name=\"products\"\n        onCHange={(e) => setProductName(e.target.value)}\n      >\n        {/* <option value=\"volvo\">Volvo</option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"fiat\">Fiat</option>\n        <option value=\"audi\">Audi</option> */}\n      </select>\n      <button type=\"submit\">Add List</button>\n    </form>\n  );\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}