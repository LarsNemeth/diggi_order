{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/diggitize/diggi_order/src/components/DataProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = props => {\n  _s();\n\n  const [products, setProducts] = useState([]); // useEffect(() => {\n  //   const storeProducts = JSON.parse(localStorage.getItem('storeProducts'));\n  //   if (storeProducts) setProducts(storeProducts);\n  // }, []);\n\n  useEffect(() => {\n    localStorage.setItem('storeProducts', JSON.stringify(products));\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: [products, setProducts],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataProvider, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/home/user/Desktop/diggitize/diggi_order/src/components/DataProvider.jsx"],"names":["React","useState","useEffect","createContext","DataContext","DataProvider","props","products","setProducts","localStorage","setItem","JSON","stringify","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;AAEP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CADqC,CAGrC;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAtC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACA,QAAD,EAAWC,WAAX,CAA7B;AAAA,cACGF,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBM;;GAAMR,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\n\nexport const DataContext = createContext();\n\nexport const DataProvider = (props) => {\n  const [products, setProducts] = useState([]);\n\n  // useEffect(() => {\n  //   const storeProducts = JSON.parse(localStorage.getItem('storeProducts'));\n  //   if (storeProducts) setProducts(storeProducts);\n  // }, []);\n\n  useEffect(() => {\n    localStorage.setItem('storeProducts', JSON.stringify(products));\n  }, [products]);\n\n  return (\n    <DataContext.Provider value={[products, setProducts]}>\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}